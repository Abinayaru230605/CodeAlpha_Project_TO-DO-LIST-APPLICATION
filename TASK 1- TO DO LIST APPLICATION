/* TO DO LIST APPLICATION USING C++ */

/* Build a console-based to-do list application.
Users should be able to add tasks, mark them as
completed, and view their current tasks */

#include <iostream>
#include <string>

using namespace std;

const int MAX_TASKS = 100;

struct Task {
    string description;
    bool completed;
};

void addTask(Task tasks[], int &taskCount) {
    if (taskCount >= MAX_TASKS) {                         
        cout << "Task list is full!" << endl;
        return;
    }
    cout << "Enter the description of the task: ";
    cin.ignore();
    getline(cin, tasks[taskCount].description);
    tasks[taskCount].completed = false;
    taskCount++;
    cout << "Task added successfully!" << endl;
}

void markTaskCompleted(Task tasks[], int taskCount) {
    cout << "Enter the task number to mark as completed: ";
    int taskNumber;
    cin >> taskNumber;
    if (taskNumber > 0 && taskNumber <= taskCount) {
        tasks[taskNumber - 1].completed = true;
        cout << "Task marked as completed!" << endl;
    } else {
        cout << "Invalid task number!" << endl;
    }
}

void viewTasks(const Task tasks[], int taskCount) {
    if (taskCount == 0) {
        cout << "No tasks available." << endl;
        return;
    }
    cout << "Current tasks:" << endl;
    for (int i = 0; i < taskCount; ++i) {
        cout << i + 1 << ". " << tasks[i].description << " ["
             << (tasks[i].completed ? "Completed" : "Pending") << "]" << endl;
    }
}

int main() {
    Task tasks[MAX_TASKS];
    int taskCount = 0;
    int choice;

    do {
        cout << "1. Add Task" << endl;
        cout << "2. Mark Task Completed" << endl;
        cout << "3. View Tasks" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                addTask(tasks, taskCount);
                break;
            case 2:
                markTaskCompleted(tasks, taskCount);
                break;
            case 3:
                viewTasks(tasks, taskCount);
                break;
            case 4:
                cout << "Exiting the application." << endl;
                break;
            default:
                cout << "Invalid choice! Please try again." << endl;
        }
    } while (choice != 4);

    return 0;
}

